{"version":3,"sources":["global-support/TopNavigationBar.js","global-support/Attribution.js","bot-creation/RedditTypes.js","bot-creation/BotDetailsForm.js","bot-creation/ServicesForm.js","bot-creation/Review.js","bot-creation/FinishedWorkflow.js","bot-creation/CreationPortal.js","view-bots/support/ViewBotsPanel.js","view-bots/ViewBotsPortal.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","position","marginBottom","spacing","title","flexGrow","menuButton","margin","TopNavigationBar","props","classes","stateMaker","activeWindow","botsVariant","botsDisabled","createVariant","createDisabled","bots","variant","disabled","create","initialState","window","location","hash","useState","state","updateState","AppBar","color","className","Toolbar","Typography","noWrap","Button","href","onClick","attribution","marginTop","Attribution","align","root","display","formControl","RedditTypesCheckboxGroup","React","subreddits","livethreads","setState","handleChange","name","event","target","checked","error","filter","v","length","FormControl","required","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","value","label","FormHelperText","BotDetailsForm","botData","nameInput","hasError","helperText","typeInput","subredditInput","onNameInputChange","bind","newValue","newHelperText","test","newState","Object","assign","this","Fragment","gutterBottom","Grid","container","item","xs","sm","TextField","id","fullWidth","InputProps","startAdornment","InputAdornment","Autocomplete","multiple","freeSolo","options","top100Films","map","option","renderTags","getTagProps","index","Chip","renderInput","params","Component","year","ServicesForm","md","products","desc","price","addresses","payments","detail","listItem","padding","total","fontWeight","Review","List","disablePadding","product","ListItem","key","ListItemText","primary","secondary","join","direction","payment","width","FinishedWorkflow","LinearProgress","layout","marginLeft","marginRight","breakpoints","up","paper","stepper","buttons","justifyContent","button","steps","CreationPortal","activeStep","setActiveStep","ref","createRef","stepData","document","CssBaseline","Paper","Stepper","Step","StepLabel","step","payload","Error","getStepContent","thisStepData","current","returnDataOrNull","console","log","heading","fontSize","typography","pxToRem","palette","text","verticalAlign","secondaryHeading","startButton","success","light","pauseButton","deleteButton","dark","ViewBotsPanel","botName","isOnline","status","online","enabledStatusLabel","isPlayButtonDisabled","isPauseButtonDisabled","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Divider","orientation","flexItem","IconButton","aria-label","stopPropagation","onFocus","size","ExpansionPanelDetails","ExpansionPanelActions","startIcon","ViewBotsPortal","botsList","fakeResponse","Container","Create","ThemeProvider","Bots","Boolean","hostname","match","ReactDOM","render","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","type","path","to","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a66664a0.chunk.js","sourcesContent":["import React, { useState }from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n  \tmargin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function TopNavigationBar(props) {\r\n\tconst classes = useStyles();\r\n\r\n  function stateMaker(activeWindow) {\r\n    let botsVariant = 'text';\r\n    let botsDisabled = false;\r\n    let createVariant = 'text';\r\n    let createDisabled = false;\r\n\r\n    // This is the initial state upon render\r\n    switch (activeWindow) {\r\n      case '#/bots':\r\n        botsVariant = 'outlined';\r\n        botsDisabled = true;\r\n        break;\r\n      case '#/create':\r\n        createVariant = 'outlined';\r\n        createDisabled = true;\r\n        break;\r\n      default: break;\r\n    }\r\n\r\n    const createdState = {\r\n      bots: {\r\n        variant: botsVariant,\r\n        disabled: botsDisabled,\r\n      },\r\n      create: {\r\n        variant: createVariant,\r\n        disabled: createDisabled,\r\n      }\r\n    }\r\n    return createdState;\r\n  }\r\n\r\n  const initialState = stateMaker(window.location.hash);\r\n  const [state, updateState] = useState(initialState);\r\n\r\n\treturn (\r\n\t\t<AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n\t    <Toolbar>\r\n\t      <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n\t        bots-as-a-service\r\n\t      </Typography>\r\n\r\n\t      <Button\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          href=\"#/bots\"\r\n          variant={ state.bots.variant }\r\n          disabled={ state.bots.disabled }\r\n          onClick={ () => updateState(stateMaker(\"#/bots\")) }\r\n        >\r\n          bots\r\n        </Button>\r\n\t      <Button\r\n           className={classes.menuButton}\r\n           color=\"inherit\"\r\n           href=\"#/create\"\r\n           variant={ state.create.variant }\r\n           disabled={ state.create.disabled }\r\n           onClick={ () => updateState(stateMaker(\"#/create\")) }\r\n        >\r\n           create\r\n         </Button>\r\n\t    </Toolbar>\r\n\t  </AppBar>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  attribution: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nexport default function Attribution() {\r\n\tconst classes = useStyles();\r\n\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.attribution}>\r\n      created and maintained for csci-5828, team 10\r\n    </Typography>\r\n  );\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n}));\n\nexport default function RedditTypesCheckboxGroup() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    subreddits: true,\n    livethreads: false,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { subreddits, livethreads } = state;\n  const error = [subreddits, livethreads].filter(v => v).length === 0;\n\n  // For now, we're hardcoding these to true/false and disabling inputs entirely.\n  // Current project scope is going to be only subreddits.\n  return (\n    <div className={classes.root}>\n      <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">triggers</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={subreddits} onChange={handleChange('subreddits')} value=\"subreddits\" />}\n            label=\"subreddits\"\n            disabled\n          />\n          <FormControlLabel\n            control={<Checkbox checked={livethreads} onChange={handleChange('livethreads')} value=\"livethreads\" />}\n            label=\"livethreads (not yet implemented)\"\n            disabled\n          />\n        </FormGroup>\n        <FormHelperText>what to trigger your bot on. must check at least one option.</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport RedditTypesCheckboxGroup from './RedditTypes.js';\n\nexport default class BotDetailsForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      botData: null,\n      nameInput: {\n        hasError: false,\n        helperText: \"the name of your bot.\",\n      },\n      typeInput: {\n        hasError: false,\n      },\n      subredditInput: {\n        hasError: false,\n      }\n    }\n\n    this.onNameInputChange = this.onNameInputChange.bind(this);\n  }\n\n  onNameInputChange(event) {\n    const newValue = event.target.value;\n    let forbiddenCharacters = /[^\\d\\w-]/;\n    let hasError = false;\n    let newHelperText = \"the name of your bot.\";\n    if (newValue.length > 64){\n      hasError = true;\n      newHelperText = \"your name is too long (must be < 64 chars).\";\n    } else if (forbiddenCharacters.test(newValue)) {\n      hasError = true;\n      newHelperText = \"you can only use alphanumeric characters, dash (-), or underscope (_).\";\n    } else {\n      hasError = false;\n      newHelperText = \"the name of your bot.\";\n    }\n\n    let newState = Object.assign({}, this.state);\n    newState.nameInput = {\n      hasError: hasError,\n      helperText: newHelperText,\n    }\n    this.setState(newState);\n  }\n\n  returnDataOrNull () {\n    // This will give us validation.\n    // Return null if there are any errors.\n    if (this.state.nameInput.hasError || this.state.typeInput.hasError || this.state.subredditInput.hasError) {\n      return null;\n    }\n    else {\n      let payload = this.state.botData;\n      return payload;\n    }\n  }\n\n  // Probably want to look at https://www.reddit.com/dev/api/#GET_api_subreddit_autocomplete_v2\n  render () {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h6\" gutterBottom>\n          bot definition\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12}>\n            <TextField\n              required\n              id=\"botName\"\n              name=\"botName\"\n              label=\"bot name\"\n              fullWidth\n              variant=\"outlined\"\n              error={this.state.nameInput.hasError}\n              helperText={this.state.nameInput.helperText}\n              onChange={this.onNameInputChange}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">/u/</InputAdornment>,\n              }}\n            />\n          </Grid>\n          <RedditTypesCheckboxGroup />\n          <Grid item xs={12}>\n            <Autocomplete\n              required\n              multiple\n              freeSolo\n              options={top100Films.map(option => option.title)}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" label={\"/r/\" + option} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={params => (\n                <TextField {...params} variant=\"outlined\" label=\"subreddits\" />\n              )}\n            />\n            <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\" gutterBottom>\n              one or more subreddits to operate in.\n            </Typography>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\n// STUB DATA\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n  { title: 'Pulp Fiction', year: 1994 },\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\n  { title: 'Fight Club', year: 1999 },\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n  { title: 'Forrest Gump', year: 1994 },\n  { title: 'Inception', year: 2010 },\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n  { title: 'Goodfellas', year: 1990 },\n  { title: 'The Matrix', year: 1999 },\n  { title: 'Seven Samurai', year: 1954 },\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n  { title: 'City of God', year: 2002 },\n  { title: 'Se7en', year: 1995 },\n  { title: 'The Silence of the Lambs', year: 1991 },\n  { title: \"It's a Wonderful Life\", year: 1946 },\n  { title: 'Life Is Beautiful', year: 1997 },\n  { title: 'The Usual Suspects', year: 1995 },\n  { title: 'Léon: The Professional', year: 1994 },\n  { title: 'Spirited Away', year: 2001 },\n  { title: 'Saving Private Ryan', year: 1998 },\n  { title: 'Once Upon a Time in the West', year: 1968 },\n  { title: 'American History X', year: 1998 },\n  { title: 'Interstellar', year: 2014 },\n  { title: 'Casablanca', year: 1942 },\n  { title: 'City Lights', year: 1931 },\n  { title: 'Psycho', year: 1960 },\n  { title: 'The Green Mile', year: 1999 },\n  { title: 'The Intouchables', year: 2011 },\n  { title: 'Modern Times', year: 1936 },\n  { title: 'Raiders of the Lost Ark', year: 1981 },\n  { title: 'Rear Window', year: 1954 },\n  { title: 'The Pianist', year: 2002 },\n  { title: 'The Departed', year: 2006 },\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\n  { title: 'Back to the Future', year: 1985 },\n  { title: 'Whiplash', year: 2014 },\n  { title: 'Gladiator', year: 2000 },\n  { title: 'Memento', year: 2000 },\n  { title: 'The Prestige', year: 2006 },\n  { title: 'The Lion King', year: 1994 },\n  { title: 'Apocalypse Now', year: 1979 },\n  { title: 'Alien', year: 1979 },\n  { title: 'Sunset Boulevard', year: 1950 },\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n  { title: 'The Great Dictator', year: 1940 },\n  { title: 'Cinema Paradiso', year: 1988 },\n  { title: 'The Lives of Others', year: 2006 },\n  { title: 'Grave of the Fireflies', year: 1988 },\n  { title: 'Paths of Glory', year: 1957 },\n  { title: 'Django Unchained', year: 2012 },\n  { title: 'The Shining', year: 1980 },\n  { title: 'WALL·E', year: 2008 },\n  { title: 'American Beauty', year: 1999 },\n  { title: 'The Dark Knight Rises', year: 2012 },\n  { title: 'Princess Mononoke', year: 1997 },\n  { title: 'Aliens', year: 1986 },\n  { title: 'Oldboy', year: 2003 },\n  { title: 'Once Upon a Time in America', year: 1984 },\n  { title: 'Witness for the Prosecution', year: 1957 },\n  { title: 'Das Boot', year: 1981 },\n  { title: 'Citizen Kane', year: 1941 },\n  { title: 'North by Northwest', year: 1959 },\n  { title: 'Vertigo', year: 1958 },\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n  { title: 'Reservoir Dogs', year: 1992 },\n  { title: 'Braveheart', year: 1995 },\n  { title: 'M', year: 1931 },\n  { title: 'Requiem for a Dream', year: 2000 },\n  { title: 'Amélie', year: 2001 },\n  { title: 'A Clockwork Orange', year: 1971 },\n  { title: 'Like Stars on Earth', year: 2007 },\n  { title: 'Taxi Driver', year: 1976 },\n  { title: 'Lawrence of Arabia', year: 1962 },\n  { title: 'Double Indemnity', year: 1944 },\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n  { title: 'Amadeus', year: 1984 },\n  { title: 'To Kill a Mockingbird', year: 1962 },\n  { title: 'Toy Story 3', year: 2010 },\n  { title: 'Logan', year: 2017 },\n  { title: 'Full Metal Jacket', year: 1987 },\n  { title: 'Dangal', year: 2016 },\n  { title: 'The Sting', year: 1973 },\n  { title: '2001: A Space Odyssey', year: 1968 },\n  { title: \"Singin' in the Rain\", year: 1952 },\n  { title: 'Toy Story', year: 1995 },\n  { title: 'Bicycle Thieves', year: 1948 },\n  { title: 'The Kid', year: 1921 },\n  { title: 'Inglourious Basterds', year: 2009 },\n  { title: 'Snatch', year: 2000 },\n  { title: '3 Idiots', year: 2009 },\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\n]\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function ServicesForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        services\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={12}>\n          <TextField required id=\"services\" label=\"services\" fullWidth />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nconst products = [\n  { name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\n  { name: 'Product 2', desc: 'Another thing', price: '$3.45' },\n  { name: 'Product 3', desc: 'Something else', price: '$6.51' },\n  { name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\nconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\nconst payments = [\n  { name: 'Card type', detail: 'Visa' },\n  { name: 'Card holder', detail: 'Mr John Smith' },\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\n  { name: 'Expiry date', detail: '04/2024' },\n];\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function Review() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        summary\n      </Typography>\n      <List disablePadding>\n        {products.map(product => (\n          <ListItem className={classes.listItem} key={product.name}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>John Smith</Typography>\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Payment details\n          </Typography>\n          <Grid container>\n            {payments.map(payment => (\n              <React.Fragment key={payment.name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.detail}</Typography>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function FinishedWorkflow() {\n  // eslint-disable-next-line\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h5\" gutterBottom>\n        creating your bot!\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        <LinearProgress />\n        we're bringing your bot to life. wow!\n      </Typography>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport BotDetailsForm from './BotDetailsForm';\nimport ServicesForm from './ServicesForm';\nimport Review from './Review';\nimport FinishedWorkflow from './FinishedWorkflow';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['details', 'services', 'review'];\n\nfunction getStepContent(step, ref, payload) {\n  switch (step) {\n    case 0:\n      return <BotDetailsForm payload={payload} ref={ref} />;\n    case 1:\n      return <ServicesForm payload={payload} ref={ref} />;\n    case 2:\n      return <Review payload={payload} ref={ref} />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function CreationPortal() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  let ref = React.createRef();\n\n  let stepData = {};\n\n  const handleNext = () => {\n    let thisStepData = ref.current.returnDataOrNull()\n\n    if (thisStepData !== null) {\n      stepData[activeStep] = thisStepData;\n      setActiveStep(activeStep + 1);\n      console.log(stepData);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  document.title = 'bots-as-a-service: create';\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            create-a-bot\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <FinishedWorkflow />\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep, ref, stepData[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'submit' : 'next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n\t\tcolor: theme.palette.text.primary,\r\n    flexGrow: 1,\r\n\t\tverticalAlign: 'baseline',\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: \"flex-end\",\r\n\t\tmarginRight: \"1rem\",\r\n  },\r\n  startButton: {\r\n  \tcolor: theme.palette.success.light,\r\n  },\r\n  pauseButton: {\r\n  \tcolor: theme.palette.primary.light,\r\n  },\r\n\tdeleteButton: {\r\n  \tcolor: theme.palette.error.dark,\r\n  },\r\n}));\r\n\r\nexport default function ViewBotsPanel(props){\r\n\tconst classes = useStyles();\r\n\tconst botName = props.payload.name;\r\n\tconst isOnline = props.payload.status.online;\r\n\r\n\tconst enabledStatusLabel = isOnline ? 'active' : 'disabled';\r\n\r\n\tconst isPlayButtonDisabled = !isOnline;\r\n\tconst isPauseButtonDisabled = !isPlayButtonDisabled;\r\n\r\n\treturn (\r\n\t\t<ExpansionPanel>\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id={botName + \"-header\"}\r\n      >\r\n        <Typography className={classes.heading}>{botName}</Typography>\r\n        <Typography className={classes.secondaryHeading}>{enabledStatusLabel}</Typography>\r\n\t\t\t\t<Divider orientation=\"vertical\" flexItem />\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"start-bot\"\r\n\t\t\t\t\tonClick={event => event.stopPropagation()}\r\n          onFocus={event => event.stopPropagation()}\r\n\t\t\t\t\tclassName={classes.startButton}\r\n\t\t\t\t\tdisabled={isPlayButtonDisabled}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<PlayArrowIcon fontSize=\"small\"/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"pause-bot\"\r\n\t\t\t\t\tonClick={event => event.stopPropagation()}\r\n          onFocus={event => event.stopPropagation()}\r\n\t\t\t\t\tclassName={classes.pauseButton}\r\n\t\t\t\t\tdisabled={isPauseButtonDisabled}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<PauseIcon fontSize=\"small\"/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label=\"delete-bot\"\r\n\t\t\t\t\tonClick={event => event.stopPropagation()}\r\n          onFocus={event => event.stopPropagation()}\r\n\t\t\t\t\tclassName={classes.deleteButton}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tdisabled={isPlayButtonDisabled}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DeleteIcon fontSize=\"small\" />\r\n\t\t\t\t</IconButton>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        <Typography>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n          sit amet blandit leo lobortis eget.\r\n        </Typography>\r\n      </ExpansionPanelDetails>\r\n      <Divider />\r\n      <ExpansionPanelActions>\r\n      \t<Button className={classes.startButton} startIcon={<PlayArrowIcon />} disabled={isPlayButtonDisabled}>\r\n\t        Start\r\n\t      </Button>\r\n\t      <Button className={classes.pauseButton} startIcon={<PauseIcon />} disabled={isPauseButtonDisabled}>\r\n\t        Disable\r\n\t      </Button>\r\n        <Button className={classes.deleteButton} startIcon={<DeleteIcon />}>\r\n\t        Delete\r\n\t      </Button>\r\n      </ExpansionPanelActions>\r\n    </ExpansionPanel>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport ViewBotsPanel from './support/ViewBotsPanel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nexport default function ViewBotsPortal(){\r\n\tdocument.title = 'bots-as-a-service: bots';\r\n\t// eslint-disable-next-line\r\n\tconst classes = useStyles();\r\n\r\n\tconst botsList = fakeResponse.map((payload) =>\r\n\t\t<ViewBotsPanel key={payload.name} payload={payload} />\r\n\t)\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Container>\r\n\t\t\t\t{botsList}\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\n// STUB\r\nconst fakeResponse = [\r\n  {\r\n    \"name\": \"stopped-bot01\",\r\n    \"auth\" : {\r\n        \"client_id\": \"\",\r\n        \"client_secret\" : \"\",\r\n        \"user_agent\" : \"\",\r\n        \"username\": \"\"\r\n    },\r\n    \"status\" : {\r\n        \"online\": false,\r\n        \"valid\": true\r\n    },\r\n    \"config\" : {\r\n        \"valid\": true,\r\n        \"subreddits\" : [\"test\"],\r\n        \"comments_enabled\": true,\r\n        \"livestream_enabled\": false,\r\n        \"comment_calling_syntax\" : \"!\",\r\n        \"services\": []\r\n    }\r\n  },\r\n\t{\r\n    \"name\": \"healthy-bot02\",\r\n    \"auth\" : {\r\n        \"client_id\": \"\",\r\n        \"client_secret\" : \"\",\r\n        \"user_agent\" : \"\",\r\n        \"username\": \"\"\r\n    },\r\n    \"status\" : {\r\n        \"online\": true,\r\n        \"valid\": true\r\n    },\r\n    \"config\" : {\r\n        \"valid\": true,\r\n        \"subreddits\" : [\"test\"],\r\n        \"comments_enabled\": true,\r\n        \"livestream_enabled\": false,\r\n        \"comment_calling_syntax\" : \"!\",\r\n        \"services\": []\r\n    }\r\n  },\r\n\t{\r\n    \"name\": \"invalid-bot03\",\r\n    \"auth\" : {\r\n        \"client_id\": \"\",\r\n        \"client_secret\" : \"\",\r\n        \"user_agent\" : \"\",\r\n        \"username\": \"\"\r\n    },\r\n    \"status\" : {\r\n        \"online\": false,\r\n        \"valid\": false\r\n    },\r\n    \"config\" : {\r\n        \"valid\": true,\r\n        \"subreddits\" : [\"test\"],\r\n        \"comments_enabled\": true,\r\n        \"livestream_enabled\": false,\r\n        \"comment_calling_syntax\" : \"!\",\r\n        \"services\": []\r\n    }\r\n  }\r\n]\r\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport TopNavigationBar from './global-support/TopNavigationBar';\nimport Attribution from './global-support/Attribution';\nimport CreationPortal from './bot-creation/CreationPortal';\nimport ViewBotsPortal from './view-bots/ViewBotsPortal';\n\nexport default function App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <TopNavigationBar />\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/create\">\n                <Create theme={theme}/>\n              </Route>\n              <Route path=\"/bots\">\n                <Bots theme={theme}/>\n              </Route>\n              <Route path=\"/\">\n                <Redirect to=\"/bots\" />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n        <Attribution />\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nfunction Create(props) {\n  return (\n    <ThemeProvider theme={props.theme}>\n      <CreationPortal />\n    </ThemeProvider>\n  );\n}\n\nfunction Bots(props) {\n  return (\n    <ThemeProvider theme={props.theme}>\n      <ViewBotsPortal />\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}